node('worker'){
  stage('Checkout'){
      checkout scm
  }

  def imageTest = docker.build("${imageName}-test", "-f Dockerfile.test .")
  stage('Pre-integration Tests'){
    parallel(
      'Quality Tests': {
        sh "docker run --rm ${imageName}-test npm run lint"
      }
      'Unit Tests': {
        sh "docker run --rm ${imageName}-test npm run test"
        publishHTML(target: [
          allowMissing: false,
          alwaysLinkToLastBuild: false,
          keepAll: true,
          reportDir: "$PWD/coverage",
          reportFiles: "index.html",
          reportName: "Coverage Report"
        ])
      }
      'Static Code Analysis': {
        withSonarQubeEnv('sonarqube') {
          sh 'sonar-scanner -Dsonar.projectVersion=$BUILD_NUMBER'
        }
      }
      'Quality Gate': {
        timeout(time: 5, unit="MINUTE") {
          def qg = waitForQualityGate()
          if (qg.status != 'OK') {
            error "Pipeline aborted due to quality gate failure: ${qg.status}"
          }
        }
      }
    )
  }
  stage('Build'){
    docker.build(imageName, '--build-arg ENVIRONMENT=sandbox .')
  }
}
